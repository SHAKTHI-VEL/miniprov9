{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranscriptDrawer = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_client_1 = require(\"@speechly/react-client\");\n/**\n * A React component that renders the transcript and entities received from Speechly SLU API.\n *\n * The component is intended to be used for providing visual feedback to the speaker.\n *\n * @public\n */\n\n\nvar TranscriptDrawer = function (props) {\n  var _a = (0, react_client_1.useSpeechContext)(),\n      segment = _a.segment,\n      clientState = _a.clientState;\n\n  var refElement = (0, react_1.useRef)();\n\n  var _b = (0, react_1.useState)(false),\n      loaded = _b[0],\n      setLoaded = _b[1];\n\n  var _c = (0, react_1.useState)(false),\n      demoMode = _c[0],\n      setDemoMode = _c[1]; // Dynamic import of HTML custom element to play nice with Next.js SSR\n\n\n  (0, react_1.useEffect)(function () {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    (function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , Promise.resolve().then(function () {\n                return __importStar(require('@speechly/browser-ui/core/transcript-drawer'));\n              })];\n\n            case 1:\n              _a.sent();\n\n              setLoaded(true);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    })();\n  }, []);\n  (0, react_1.useEffect)(function () {\n    if ((refElement === null || refElement === void 0 ? void 0 : refElement.current) !== undefined) {\n      refElement.current.speechstate(clientState);\n    }\n  }, [clientState]);\n  (0, react_1.useEffect)(function () {\n    if ((refElement === null || refElement === void 0 ? void 0 : refElement.current) !== undefined && segment !== undefined) {\n      setDemoMode(false);\n      refElement.current.speechsegment(segment);\n    }\n  }, [segment]);\n  (0, react_1.useEffect)(function () {\n    if ((refElement === null || refElement === void 0 ? void 0 : refElement.current) !== undefined && props.mockSegment !== undefined) {\n      setDemoMode(true);\n      refElement.current.speechsegment(props.mockSegment);\n    }\n  }, [props.mockSegment]);\n  if (!loaded) return null;\n  return react_1.default.createElement(\"transcript-drawer\", {\n    ref: refElement,\n    demomode: demoMode ? 'true' : 'false',\n    formattext: props.formatText === false ? 'false' : 'true',\n    fontsize: props.fontSize,\n    color: props.color,\n    smalltextcolor: props.smallTextColor,\n    highlightcolor: props.highlightColor,\n    backgroundcolor: props.backgroundColor,\n    marginbottom: props.marginBottom,\n    hint: JSON.stringify(props.hint),\n    height: props.height,\n    hintfontsize: props.hintFontSize\n  });\n};\n\nexports.TranscriptDrawer = TranscriptDrawer;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAmEA;;;;;;;;;AAOO,IAAMA,gBAAgB,GAAoC,iBAAK;EAC9D,SAA2B,sCAA3B;EAAA,IAAEC,OAAO,aAAT;EAAA,IAAWC,WAAW,iBAAtB;;EACN,IAAMC,UAAU,GAAG,qBAAnB;;EACM,SAAsB,sBAAS,KAAT,CAAtB;EAAA,IAACC,MAAM,QAAP;EAAA,IAASC,SAAS,QAAlB;;EACA,SAA0B,sBAAS,KAAT,CAA1B;EAAA,IAACC,QAAQ,QAAT;EAAA,IAAWC,WAAW,QAAtB,CAJ8D,CAMpE;;;EACA,uBAAU;IACR;IACA,CAAC;MAAA;;;;cACC;cAAA;cAAA;gBAAA,4BAAa,6CAAb;cAA0D,CAA1D;;;cAAAC;;cACAH,SAAS,CAAC,IAAD,CAAT;;;;;;OAFD;IAGA,CAHD;EAID,CAND,EAMG,EANH;EAQA,uBAAU;IACR,IAAI,WAAU,SAAV,cAAU,WAAV,GAAU,MAAV,aAAU,CAAEI,OAAZ,MAAwBC,SAA5B,EAAuC;MACrCP,UAAU,CAACM,OAAX,CAAmBE,WAAnB,CAA+BT,WAA/B;IACD;EACF,CAJD,EAIG,CAACA,WAAD,CAJH;EAMA,uBAAU;IACR,IAAI,WAAU,SAAV,cAAU,WAAV,GAAU,MAAV,aAAU,CAAEO,OAAZ,MAAwBC,SAAxB,IAAqCT,OAAO,KAAKS,SAArD,EAAgE;MAC9DH,WAAW,CAAC,KAAD,CAAX;MACAJ,UAAU,CAACM,OAAX,CAAmBG,aAAnB,CAAiCX,OAAjC;IACD;EACF,CALD,EAKG,CAACA,OAAD,CALH;EAOA,uBAAU;IACR,IAAI,WAAU,SAAV,cAAU,WAAV,GAAU,MAAV,aAAU,CAAEQ,OAAZ,MAAwBC,SAAxB,IAAqCG,KAAK,CAACC,WAAN,KAAsBJ,SAA/D,EAA0E;MACxEH,WAAW,CAAC,IAAD,CAAX;MACAJ,UAAU,CAACM,OAAX,CAAmBG,aAAnB,CAAiCC,KAAK,CAACC,WAAvC;IACD;EACF,CALD,EAKG,CAACD,KAAK,CAACC,WAAP,CALH;EAOA,IAAI,CAACV,MAAL,EAAa,OAAO,IAAP;EAEb,OACEW;IACEC,GAAG,EAAEb,UADP;IAEEc,QAAQ,EAAEX,QAAQ,GAAG,MAAH,GAAY,OAFhC;IAGEY,UAAU,EAAEL,KAAK,CAACM,UAAN,KAAqB,KAArB,GAA6B,OAA7B,GAAuC,MAHrD;IAIEC,QAAQ,EAAEP,KAAK,CAACQ,QAJlB;IAKEC,KAAK,EAAET,KAAK,CAACS,KALf;IAMEC,cAAc,EAAEV,KAAK,CAACW,cANxB;IAOEC,cAAc,EAAEZ,KAAK,CAACa,cAPxB;IAQEC,eAAe,EAAEd,KAAK,CAACe,eARzB;IASEC,YAAY,EAAEhB,KAAK,CAACiB,YATtB;IAUEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAepB,KAAK,CAACkB,IAArB,CAVR;IAWEG,MAAM,EAAErB,KAAK,CAACqB,MAXhB;IAYEC,YAAY,EAAEtB,KAAK,CAACuB;EAZtB,EADF;AAgBD,CArDM;;AAAMC,2BAAgBrC,gBAAhB","names":["TranscriptDrawer","segment","clientState","refElement","loaded","setLoaded","demoMode","setDemoMode","_a","current","undefined","speechstate","speechsegment","props","mockSegment","react_1","ref","demomode","formattext","formatText","fontsize","fontSize","color","smalltextcolor","smallTextColor","highlightcolor","highlightColor","backgroundcolor","backgroundColor","marginbottom","marginBottom","hint","JSON","stringify","height","hintfontsize","hintFontSize","exports"],"sources":["/home/shakthivel/Documents/mini-project/node_modules/@speechly/react-ui/src/components/TranscriptDrawer.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { SpeechSegment, useSpeechContext } from '@speechly/react-client'\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      'transcript-drawer': any\n    }\n  }\n}\n\n/**\n * Properties for BigTranscript component.\n *\n * @public\n */\nexport type TranscriptDrawerProps = {\n  /**\n   * Optional \"top\" string turns on internal placement without any CSS positioning.\n   */\n  placement?: string\n  /**\n   * Optional boolean. If true, transcript is formatted with detected entities, e.g. numbers. Default: true\n   */\n  formatText?: boolean\n  /**\n   * Optional CSS string for text size. Default: \"1.5rem\"\n   */\n  fontSize?: string\n  /**\n   * Optional string (CSS color) for text. Default: \"#ffffff\"\n   */\n  color?: string\n  /**\n   * Optional string (CSS color) for entity highlighting, vu meter and acknowledged icon. Default: \"#15e8b5\"\n   */\n  highlightColor?: string\n  /**\n   * Optional string (CSS color) for hint text background. Default: \"#202020\"\n   */\n  backgroundColor?: string\n  /**\n   * Optional string (CSS dimension). Dynamic margin added when element is visible. Default: \"0rem\"\n   */\n  marginBottom?: string\n  /**\n   * Optional SpeechSegment to be displayed instead of actual transcription from API. Can be used to demonstrate voice functionality to the user.\n   */\n  mockSegment?: SpeechSegment | undefined\n  /**\n   * Optional hint text or array\n   */\n  hint?: string | string[]\n  /**\n   * Optional minimum height as CSS string. Default: \"8rem\"\n   */\n  height?: string\n  /**\n   * Optional string (CSS color) for hint text. Default: \"#ffffff70\"\n   */\n  smallTextColor?: string\n  /**\n   * Optional CSS string for hint text size. Default: \"0.9rem\"\n   */\n  hintFontSize?: string\n}\n\n/**\n * A React component that renders the transcript and entities received from Speechly SLU API.\n *\n * The component is intended to be used for providing visual feedback to the speaker.\n *\n * @public\n */\nexport const TranscriptDrawer: React.FC<TranscriptDrawerProps> = props => {\n  const { segment, clientState } = useSpeechContext()\n  const refElement = useRef<any>()\n  const [loaded, setLoaded] = useState(false)\n  const [demoMode, setDemoMode] = useState(false)\n\n  // Dynamic import of HTML custom element to play nice with Next.js SSR\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    (async () => {\n      await import('@speechly/browser-ui/core/transcript-drawer')\n      setLoaded(true)\n    })()\n  }, [])\n\n  useEffect(() => {\n    if (refElement?.current !== undefined) {\n      refElement.current.speechstate(clientState)\n    }\n  }, [clientState])\n\n  useEffect(() => {\n    if (refElement?.current !== undefined && segment !== undefined) {\n      setDemoMode(false)\n      refElement.current.speechsegment(segment)\n    }\n  }, [segment])\n\n  useEffect(() => {\n    if (refElement?.current !== undefined && props.mockSegment !== undefined) {\n      setDemoMode(true)\n      refElement.current.speechsegment(props.mockSegment)\n    }\n  }, [props.mockSegment])\n\n  if (!loaded) return null\n\n  return (\n    <transcript-drawer\n      ref={refElement}\n      demomode={demoMode ? 'true' : 'false'}\n      formattext={props.formatText === false ? 'false' : 'true'}\n      fontsize={props.fontSize}\n      color={props.color}\n      smalltextcolor={props.smallTextColor}\n      highlightcolor={props.highlightColor}\n      backgroundcolor={props.backgroundColor}\n      marginbottom={props.marginBottom}\n      hint={JSON.stringify(props.hint)}\n      height={props.height}\n      hintfontsize={props.hintFontSize}\n    ></transcript-drawer>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}