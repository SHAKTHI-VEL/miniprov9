{"ast":null,"code":"!function (t) {\n  \"function\" == typeof define && define.amd ? define(t) : t();\n}(function () {\n  \"use strict\";\n\n  function t() {}\n\n  const e = t => t;\n\n  function n(t) {\n    return t();\n  }\n\n  function o() {\n    return Object.create(null);\n  }\n\n  function r(t) {\n    t.forEach(n);\n  }\n\n  function i(t) {\n    return \"function\" == typeof t;\n  }\n\n  function s(t, e) {\n    return t != t ? e == e : t !== e;\n  }\n\n  const a = \"undefined\" != typeof window;\n  let c = a ? () => window.performance.now() : () => Date.now(),\n      l = a ? t => requestAnimationFrame(t) : t;\n  const u = new Set();\n\n  function d(t) {\n    u.forEach(e => {\n      e.c(t) || (u.delete(e), e.f());\n    }), 0 !== u.size && l(d);\n  }\n\n  function f(t) {\n    let e;\n    return 0 === u.size && l(d), {\n      promise: new Promise(n => {\n        u.add(e = {\n          c: t,\n          f: n\n        });\n      }),\n\n      abort() {\n        u.delete(e);\n      }\n\n    };\n  }\n\n  function h(t, e) {\n    t.appendChild(e);\n  }\n\n  function m(t) {\n    if (!t) return document;\n    const e = t.getRootNode ? t.getRootNode() : t.ownerDocument;\n    return e && e.host ? e : t.ownerDocument;\n  }\n\n  function $(t) {\n    const e = w(\"style\");\n    return function (t, e) {\n      h(t.head || t, e);\n    }(m(t), e), e.sheet;\n  }\n\n  function g(t, e, n) {\n    t.insertBefore(e, n || null);\n  }\n\n  function p(t) {\n    t.parentNode.removeChild(t);\n  }\n\n  function w(t) {\n    return document.createElement(t);\n  }\n\n  function v() {\n    return t = \" \", document.createTextNode(t);\n    var t;\n  }\n\n  function b(t, e, n, o) {\n    return t.addEventListener(e, n, o), () => t.removeEventListener(e, n, o);\n  }\n\n  function x(t, e, n) {\n    null == n ? t.removeAttribute(e) : t.getAttribute(e) !== n && t.setAttribute(e, n);\n  }\n\n  function y(t, e, n, o) {\n    null === n ? t.style.removeProperty(e) : t.style.setProperty(e, n, o ? \"important\" : \"\");\n  }\n\n  function k(t) {\n    const e = {};\n\n    for (const n of t) e[n.name] = n.value;\n\n    return e;\n  }\n\n  const _ = new Map();\n\n  let E,\n      C = 0;\n\n  function D(t, e, n, o, r, i, s) {\n    let a = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n    const c = 16.666 / o;\n    let l = \"{\\n\";\n\n    for (let t = 0; t <= 1; t += c) {\n      const o = e + (n - e) * i(t);\n      l += 100 * t + `%{${s(o, 1 - o)}}\\n`;\n    }\n\n    const u = l + `100% {${s(n, 1 - n)}}\\n}`,\n          d = `__svelte_${function (t) {\n      let e = 5381,\n          n = t.length;\n\n      for (; n--;) e = (e << 5) - e ^ t.charCodeAt(n);\n\n      return e >>> 0;\n    }(u)}_${a}`,\n          f = m(t),\n          {\n      stylesheet: h,\n      rules: g\n    } = _.get(f) || function (t, e) {\n      const n = {\n        stylesheet: $(e),\n        rules: {}\n      };\n      return _.set(t, n), n;\n    }(f, t);\n\n    g[d] || (g[d] = !0, h.insertRule(`@keyframes ${d} ${u}`, h.cssRules.length));\n    const p = t.style.animation || \"\";\n    return t.style.animation = `${p ? `${p}, ` : \"\"}${d} ${o}ms linear ${r}ms 1 both`, C += 1, d;\n  }\n\n  function z(t, e) {\n    const n = (t.style.animation || \"\").split(\", \"),\n          o = n.filter(e ? t => t.indexOf(e) < 0 : t => -1 === t.indexOf(\"__svelte\")),\n          r = n.length - o.length;\n    r && (t.style.animation = o.join(\", \"), C -= r, C || l(() => {\n      C || (_.forEach(t => {\n        const {\n          stylesheet: e\n        } = t;\n        let n = e.cssRules.length;\n\n        for (; n--;) e.deleteRule(n);\n\n        t.rules = {};\n      }), _.clear());\n    }));\n  }\n\n  function A(t) {\n    E = t;\n  }\n\n  const P = [],\n        R = [],\n        S = [],\n        T = [],\n        L = Promise.resolve();\n  let M = !1;\n\n  function O(t) {\n    S.push(t);\n  }\n\n  const N = new Set();\n  let j,\n      H = 0;\n\n  function q() {\n    const t = E;\n\n    do {\n      for (; H < P.length;) {\n        const t = P[H];\n        H++, A(t), B(t.$$);\n      }\n\n      for (A(null), P.length = 0, H = 0; R.length;) R.pop()();\n\n      for (let t = 0; t < S.length; t += 1) {\n        const e = S[t];\n        N.has(e) || (N.add(e), e());\n      }\n\n      S.length = 0;\n    } while (P.length);\n\n    for (; T.length;) T.pop()();\n\n    M = !1, N.clear(), A(t);\n  }\n\n  function B(t) {\n    if (null !== t.fragment) {\n      t.update(), r(t.before_update);\n      const e = t.dirty;\n      t.dirty = [-1], t.fragment && t.fragment.p(t.ctx, e), t.after_update.forEach(O);\n    }\n  }\n\n  function F() {\n    return j || (j = Promise.resolve(), j.then(() => {\n      j = null;\n    })), j;\n  }\n\n  function G(t, e, n) {\n    t.dispatchEvent(function (t, e) {\n      let {\n        bubbles: n = !1,\n        cancelable: o = !1\n      } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const r = document.createEvent(\"CustomEvent\");\n      return r.initCustomEvent(t, n, o, e), r;\n    }(`${e ? \"intro\" : \"outro\"}${n}`));\n  }\n\n  const I = new Set();\n  let J;\n\n  function K(t, e) {\n    t && t.i && (I.delete(t), t.i(e));\n  }\n\n  function Q(t, e, n, o) {\n    if (t && t.o) {\n      if (I.has(t)) return;\n      I.add(t), J.c.push(() => {\n        I.delete(t), o && (n && t.d(1), o());\n      }), t.o(e);\n    }\n  }\n\n  const U = {\n    duration: 0\n  };\n\n  function V(t, e) {\n    -1 === t.$$.dirty[0] && (P.push(t), M || (M = !0, L.then(q)), t.$$.dirty.fill(0)), t.$$.dirty[e / 31 | 0] |= 1 << e % 31;\n  }\n\n  function W(e, s, a, c, l, u, d) {\n    let f = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [-1];\n    const h = E;\n    A(e);\n    const m = e.$$ = {\n      fragment: null,\n      ctx: null,\n      props: u,\n      update: t,\n      not_equal: l,\n      bound: o(),\n      on_mount: [],\n      on_destroy: [],\n      on_disconnect: [],\n      before_update: [],\n      after_update: [],\n      context: new Map(s.context || (h ? h.$$.context : [])),\n      callbacks: o(),\n      dirty: f,\n      skip_bound: !1,\n      root: s.target || h.$$.root\n    };\n    d && d(m.root);\n    let $ = !1;\n\n    if (m.ctx = a ? a(e, s.props || {}, function (t, n) {\n      const r = (arguments.length <= 2 ? 0 : arguments.length - 2) ? arguments.length <= 2 ? undefined : arguments[2] : n;\n      return m.ctx && l(m.ctx[t], m.ctx[t] = r) && (!m.skip_bound && m.bound[t] && m.bound[t](r), $ && V(e, t)), n;\n    }) : [], m.update(), $ = !0, r(m.before_update), m.fragment = !!c && c(m.ctx), s.target) {\n      if (s.hydrate) {\n        const t = function (t) {\n          return Array.from(t.childNodes);\n        }(s.target);\n\n        m.fragment && m.fragment.l(t), t.forEach(p);\n      } else m.fragment && m.fragment.c();\n\n      s.intro && K(e.$$.fragment), function (t, e, o, s) {\n        const {\n          fragment: a,\n          on_mount: c,\n          on_destroy: l,\n          after_update: u\n        } = t.$$;\n        a && a.m(e, o), s || O(() => {\n          const e = c.map(n).filter(i);\n          l ? l.push(...e) : r(e), t.$$.on_mount = [];\n        }), u.forEach(O);\n      }(e, s.target, s.anchor, s.customElement), q();\n    }\n\n    A(h);\n  }\n\n  let X;\n\n  function Y(n) {\n    let o,\n        s,\n        a,\n        l,\n        u,\n        d,\n        m,\n        $,\n        k,\n        _,\n        E = tt;\n\n    return {\n      c() {\n        o = w(\"div\"), s = w(\"div\"), s.innerHTML = \"<slot></slot>\", a = v(), l = w(\"div\"), u = v(), E && E.c(), x(s, \"class\", \"CalloutDiv\"), function (t, e, n) {\n          t.classList[n ? \"add\" : \"remove\"](e);\n        }(s, \"useShadow\", tt), x(l, \"class\", \"ArrowDiv\"), y(l, \"--ax\", n[3].x), y(l, \"--ay\", \"100%\"), x(o, \"class\", \"CalloutContainerDiv\"), y(o, \"width\", n[1]);\n      },\n\n      m(t, e) {\n        g(t, o, e), h(o, s), h(o, a), h(o, l), h(o, u), E && E.m(o, null), $ = !0, k || (_ = [b(o, \"mousedown\", n[7]), b(o, \"touchstart\", n[7]), b(o, \"dragstart\", n[7])], k = !0);\n      },\n\n      p(t, e) {\n        (!$ || 8 & e) && y(l, \"--ax\", t[3].x), (!$ || 2 & e) && y(o, \"width\", t[1]);\n      },\n\n      i(r) {\n        $ || (O(() => {\n          m && m.end(1), d = function (n, o, r) {\n            let s,\n                a,\n                l = o(n, r),\n                u = !1,\n                d = 0;\n\n            function h() {\n              s && z(n, s);\n            }\n\n            function m() {\n              const {\n                delay: o = 0,\n                duration: r = 300,\n                easing: i = e,\n                tick: m = t,\n                css: $\n              } = l || U;\n              $ && (s = D(n, 0, 1, r, o, i, $, d++)), m(0, 1);\n              const g = c() + o,\n                    p = g + r;\n              a && a.abort(), u = !0, O(() => G(n, !0, \"start\")), a = f(t => {\n                if (u) {\n                  if (t >= p) return m(1, 0), G(n, !0, \"end\"), h(), u = !1;\n\n                  if (t >= g) {\n                    const e = i((t - g) / r);\n                    m(e, 1 - e);\n                  }\n                }\n\n                return u;\n              });\n            }\n\n            let $ = !1;\n            return {\n              start() {\n                $ || ($ = !0, z(n), i(l) ? (l = l(), F().then(m)) : m());\n              },\n\n              invalidate() {\n                $ = !1;\n              },\n\n              end() {\n                u && (h(), u = !1);\n              }\n\n            };\n          }(o, n[6], {}), d.start();\n        }), $ = !0);\n      },\n\n      o(s) {\n        d && d.invalidate(), m = function (n, o, s) {\n          let a,\n              l = o(n, s),\n              u = !0;\n          const d = J;\n\n          function h() {\n            const {\n              delay: o = 0,\n              duration: i = 300,\n              easing: s = e,\n              tick: h = t,\n              css: m\n            } = l || U;\n            m && (a = D(n, 1, 0, i, o, s, m));\n            const $ = c() + o,\n                  g = $ + i;\n            O(() => G(n, !1, \"start\")), f(t => {\n              if (u) {\n                if (t >= g) return h(0, 1), G(n, !1, \"end\"), --d.r || r(d.c), !1;\n\n                if (t >= $) {\n                  const e = s((t - $) / i);\n                  h(1 - e, e);\n                }\n              }\n\n              return u;\n            });\n          }\n\n          return d.r += 1, i(l) ? F().then(() => {\n            l = l(), h();\n          }) : h(), {\n            end(t) {\n              t && l.tick && l.tick(1, 0), u && (a && z(n, a), u = !1);\n            }\n\n          };\n        }(o, n[6], {}), $ = !1;\n      },\n\n      d(t) {\n        t && p(o), E && E.d(), t && m && m.end(), k = !1, r(_);\n      }\n\n    };\n  }\n\n  function Z(e) {\n    let n,\n        o,\n        i = e[2] && Y(e);\n    return {\n      c() {\n        n = w(\"main\"), i && i.c(), this.c = t, y(n, \"--ax\", e[4].x), y(n, \"--ay\", e[4].y), y(n, \"--halign\", e[3].x), y(n, \"--valign\", e[3].y), y(n, \"--borderradius\", et), y(n, \"--arrowpad\", `${e[5].value}${e[5].unit}`), y(n, \"--backgroundcolor\", e[0]), y(n, \"--size\", `${e[5].value * Math.sqrt(2)}${e[5].unit}`), y(n, \"--offsetx\", \"0rem\"), y(n, \"--offsety\", `${e[5].value}${e[5].unit}`);\n      },\n\n      m(t, e) {\n        g(t, n, e), i && i.m(n, null), o = !0;\n      },\n\n      p(t, _ref) {\n        let [e] = _ref;\n        t[2] ? i ? (i.p(t, e), 4 & e && K(i, 1)) : (i = Y(t), i.c(), K(i, 1), i.m(n, null)) : i && (J = {\n          r: 0,\n          c: [],\n          p: J\n        }, Q(i, 1, 1, () => {\n          i = null;\n        }), J.r || r(J.c), J = J.p), (!o || 8 & e) && y(n, \"--halign\", t[3].x), (!o || 8 & e) && y(n, \"--valign\", t[3].y), (!o || 1 & e) && y(n, \"--backgroundcolor\", t[0]);\n      },\n\n      i(t) {\n        o || (K(i), o = !0);\n      },\n\n      o(t) {\n        Q(i), o = !1;\n      },\n\n      d(t) {\n        t && p(n), i && i.d();\n      }\n\n    };\n  }\n\n  \"function\" == typeof HTMLElement && (X = class extends HTMLElement {\n    constructor() {\n      super(), this.attachShadow({\n        mode: \"open\"\n      });\n    }\n\n    connectedCallback() {\n      const {\n        on_mount: t\n      } = this.$$;\n      this.$$.on_disconnect = t.map(n).filter(i);\n\n      for (const t in this.$$.slotted) this.appendChild(this.$$.slotted[t]);\n    }\n\n    attributeChangedCallback(t, e, n) {\n      this[t] = n;\n    }\n\n    disconnectedCallback() {\n      r(this.$$.on_disconnect);\n    }\n\n    $destroy() {\n      !function (t, e) {\n        const n = t.$$;\n        null !== n.fragment && (r(n.on_destroy), n.fragment && n.fragment.d(e), n.on_destroy = n.fragment = null, n.ctx = []);\n      }(this, 1), this.$destroy = t;\n    }\n\n    $on(t, e) {\n      const n = this.$$.callbacks[t] || (this.$$.callbacks[t] = []);\n      return n.push(e), () => {\n        const t = n.indexOf(e);\n        -1 !== t && n.splice(t, 1);\n      };\n    }\n\n    $set(t) {\n      var e;\n      this.$$set && (e = t, 0 !== Object.keys(e).length) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1);\n    }\n\n  });\n  let tt = !1,\n      et = \"0rem\";\n\n  function nt(t, e, n) {\n    let o,\n        {\n      show: r\n    } = e,\n        {\n      showtime: i = 1e4\n    } = e,\n        {\n      backgroundcolor: s = \"#202020\"\n    } = e,\n        {\n      xalign: a = \"50%\"\n    } = e,\n        {\n      width: c = \"auto\"\n    } = e,\n        l = null,\n        u = !1;\n    const d = (f = (t, _ref2) => {\n      let {\n        duration: e = 250\n      } = _ref2;\n      return {\n        duration: e,\n        css: t => `\\n          clip-path: circle(${100 * t}% at ${o.x} 50%);\\n        `\n      };\n    }, function (t, e) {\n      if (!t.hasOwnProperty(\"ownerDocument\")) {\n        Object.defineProperty(t, \"ownerDocument\", {\n          get: function () {\n            return t.parentElement;\n          }\n        });\n        let e = t;\n\n        for (; e.parentElement;) e = e.parentElement;\n\n        t.parentElement.head = e;\n      }\n\n      return f(t, e);\n    });\n    var f;\n    return t.$$set = t => {\n      \"show\" in t && n(8, r = t.show), \"showtime\" in t && n(9, i = t.showtime), \"backgroundcolor\" in t && n(0, s = t.backgroundcolor), \"xalign\" in t && n(10, a = t.xalign), \"width\" in t && n(1, c = t.width);\n    }, t.$$.update = () => {\n      1024 & t.$$.dirty && n(3, o = {\n        x: a,\n        y: \"100%\"\n      }), 256 & t.$$.dirty && (t => {\n        null !== l && (window.clearTimeout(l), l = null), void 0 !== t && \"false\" !== t ? l = window.setTimeout(() => {\n          n(2, u = !0), l = null, i > 0 && (l = window.setTimeout(() => {\n            n(2, u = !1), l = null;\n          }, i));\n        }, 500) : n(2, u = !1);\n      })(r);\n    }, [s, c, u, o, {\n      x: \"50%\",\n      y: \"10%\"\n    }, {\n      value: .55,\n      unit: \"rem\"\n    }, d, t => {\n      t.preventDefault(), t.stopPropagation(), n(2, u = !1);\n    }, r, i, a];\n  }\n\n  class ot extends X {\n    constructor(t) {\n      super(), this.shadowRoot.innerHTML = \"<style>main{margin:0;padding:0}.CalloutContainerDiv{position:absolute;left:var(--ax);top:var(--ay);transform:translate(calc(-1 * var(--halign)), calc(-1 * var(--valign)));padding:var(--arrowpad);z-index:10;pointer-events:auto}.CalloutDiv{position:relative;box-sizing:border-box;min-width:8rem;border-radius:var(--borderradius);padding:0.50rem 1rem;background-color:var(--backgroundcolor);text-align:center;user-select:none;z-index:10}.useShadow{box-shadow:0 0.2rem 0.5rem #00000040}.ArrowDiv{position:absolute;left:calc(var(--ax) - var(--offsetx));top:calc(var(--ay) - var(--offsety));transform:translate(-50%, -50%) rotate(45deg);width:var(--size);height:var(--size);background-color:var(--backgroundcolor);z-index:10}.ArrowShadowDiv{position:absolute;left:calc(var(--ax) - var(--offsetx));top:calc(var(--ay) - var(--offsety));transform:translate(-50%, -50%) rotate(45deg);width:var(--size);height:var(--size);background-color:var(--backgroundcolor);background-color:#00000000;box-shadow:0 0.2rem 0.5rem #00000040;z-index:9}</style>\", W(this, {\n        target: this.shadowRoot,\n        props: k(this.attributes),\n        customElement: !0\n      }, nt, Z, s, {\n        show: 8,\n        showtime: 9,\n        backgroundcolor: 0,\n        xalign: 10,\n        width: 1\n      }, null), t && (t.target && g(t.target, this, t.anchor), t.props && (this.$set(t.props), q()));\n    }\n\n    static get observedAttributes() {\n      return [\"show\", \"showtime\", \"backgroundcolor\", \"xalign\", \"width\"];\n    }\n\n    get show() {\n      return this.$$.ctx[8];\n    }\n\n    set show(t) {\n      this.$$set({\n        show: t\n      }), q();\n    }\n\n    get showtime() {\n      return this.$$.ctx[9];\n    }\n\n    set showtime(t) {\n      this.$$set({\n        showtime: t\n      }), q();\n    }\n\n    get backgroundcolor() {\n      return this.$$.ctx[0];\n    }\n\n    set backgroundcolor(t) {\n      this.$$set({\n        backgroundcolor: t\n      }), q();\n    }\n\n    get xalign() {\n      return this.$$.ctx[10];\n    }\n\n    set xalign(t) {\n      this.$$set({\n        xalign: t\n      }), q();\n    }\n\n    get width() {\n      return this.$$.ctx[1];\n    }\n\n    set width(t) {\n      this.$$set({\n        width: t\n      }), q();\n    }\n\n  }\n\n  customElements.get(\"call-out\") ? console.warn(\"Skipping re-defining customElement call-out\") : customElements.define(\"call-out\", ot);\n});","map":{"version":3,"mappings":"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","names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","sheet","insert","anchor","insertBefore","detach","parentNode","removeChild","name","createElement","space","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_style","key","important","removeProperty","setProperty","attribute_to_object","attributes","result","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","flushidx","flush","saved_component","update","$$","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","cancelable","e","createEvent","initCustomEvent","custom_event","outroing","outros","transition_in","block","local","transition_out","o","d","null_transition","make_dirty","fill","init","instance","create_fragment","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","customElement","m","new_on_destroy","map","mount_component","SvelteElement","useShadow","toggle","classList","div2","div0","div1","k","$","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","started","start","invalidate","end","n","group","r","reset","create_if_block","y","borderRadius","unit","Math","sqrt","main","Q","HTMLElement","constructor","super","this","attachShadow","mode","connectedCallback","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","detaching","destroy_component","$on","index","splice","$set","$$props","obj","$$set","keys","show","showtime","backgroundcolor","xalign","width","timeout","showCallout","transtion","destAnchors","hasOwnProperty","defineProperty","parentElement","elem","circlewipe","$$invalidate","clearTimeout","undefined","setTimeout","preventDefault","stopPropagation","customElements","console","warn","define","el"],"sources":["/home/shakthivel/Documents/mini-project/node_modules/common/temp/node_modules/.pnpm/svelte@3.48.0/node_modules/svelte/internal/index.mjs","/home/shakthivel/Documents/mini-project/node_modules/@speechly/browser-ui/src/call-out.svelte","/home/shakthivel/Documents/mini-project/node_modules/@speechly/browser-ui/src/fixTransition.ts","/home/shakthivel/Documents/mini-project/node_modules/@speechly/browser-ui/src/call-out.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<svelte:options tag={null} immutable={true} />\n\n<script lang=\"ts\">\n  import fix from './fixTransition'\n\n  const INSTRUCTION_PREROLL_MS = 500\n\n  export let show = undefined;\n  export let showtime = 10000;\n  export let backgroundcolor = \"#202020\";\n  export let xalign = \"50%\"\n  export let width = \"auto\";\n\n  let sourceAnchors = { x: '50%', y: '10%' };\n  $: destAnchors = { x: xalign, y: '100%' };\n  let arrowSize = { value: 0.55, unit: 'rem' };\n  let useShadow = false;\n  let borderRadius = \"0rem\";\n  let timeout = null;\n  let showCallout = false;\n\n  // Preroll and auto-hide logic\n  $: scheduleShow(show) \n\n  const circlewipe = fix((node, { duration = 250 }) => {\n    return {\n      duration,\n      css: (t: number) => {\n        return `\n          clip-path: circle(${t * 100}% at ${destAnchors.x} 50%);\n        `\n      }\n    }\n  });\n\n  const scheduleShow = (show) => {\n    if (timeout !== null) {\n      window.clearTimeout(timeout);\n      timeout = null;\n    }\n\n    if (show !== undefined && show !== \"false\") {\n      timeout = window.setTimeout(() => {\n        showCallout = true;\n        timeout = null;\n        if ((showtime as unknown as number) > 0) {\n          timeout = window.setTimeout(() => {\n            showCallout = false;\n            timeout = null;\n          }, (showtime as unknown as number));\n        }\n      }, INSTRUCTION_PREROLL_MS);\n    } else {\n      showCallout = false;\n    }\n  }\n\n  const onMouseDown = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    showCallout = false;\n  }\n\n</script>\n\n<main style=\"\n  --ax: {sourceAnchors.x};\n  --ay: {sourceAnchors.y};\n  --halign: {destAnchors.x};\n  --valign: {destAnchors.y};\n  --borderradius: {borderRadius};\n  --arrowpad: {`${arrowSize.value}${arrowSize.unit}`};\n  --backgroundcolor: {backgroundcolor};\n  --size: {`${arrowSize.value * Math.sqrt(2)}${arrowSize.unit}`};\n  --offsetx: {\"0rem\"};\n  --offsety: {`${arrowSize.value}${arrowSize.unit}`};\n\">\n  {#if showCallout}\n    <div class=\"CalloutContainerDiv\"\n      on:mousedown={onMouseDown}\n      on:touchstart={onMouseDown}\n      on:dragstart={onMouseDown}\n      in:circlewipe\n      out:circlewipe\n      style=\"\n        width: {width};\n      \"\n    >\n      <div class=\"CalloutDiv\" class:useShadow={useShadow}><slot></slot></div>\n      <div class=\"ArrowDiv\" style=\"\n        --ax: {destAnchors.x};\n        --ay: 100%;\n      \"/>\n      {#if useShadow}\n        <div class=\"ArrowShadowDiv\"/>\n      {/if}\n    </div>\n  {/if}\n</main>\n\n<style>\n  main {\n    margin:0;\n    padding:0;\n  }\n\n  .CalloutContainerDiv {\n    position: absolute;\n    left: var(--ax);\n    top: var(--ay);\n    transform: translate(calc(-1 * var(--halign)), calc(-1 * var(--valign)));\n    padding: var(--arrowpad);\n    z-index: 10;\n    pointer-events: auto;\n  }\n\n  .CalloutDiv {\n    position: relative;\n    box-sizing: border-box;\n    min-width: 8rem;\n    border-radius: var(--borderradius);\n    padding: 0.50rem 1rem;\n    background-color: var(--backgroundcolor);\n    text-align: center;\n    user-select: none;\n    z-index: 10;\n  }\n\n  .useShadow {\n    box-shadow: 0 0.2rem 0.5rem #00000040;\n  }\n\n  .ArrowDiv {\n    position: absolute;\n    left: calc(var(--ax) - var(--offsetx));\n    top: calc(var(--ay) - var(--offsety));\n\n    transform: translate(-50%, -50%) rotate(45deg);\n    width: var(--size);\n    height: var(--size);\n    background-color: var(--backgroundcolor);\n    z-index: 10;\n  }\n\n  .ArrowShadowDiv {\n    position: absolute;\n    left: calc(var(--ax) - var(--offsetx));\n    top: calc(var(--ay) - var(--offsety));\n\n    transform: translate(-50%, -50%) rotate(45deg);\n    width: var(--size);\n    height: var(--size);\n    background-color: var(--backgroundcolor);\n    background-color: #00000000;\n    box-shadow: 0 0.2rem 0.5rem #00000040;\n    z-index: 9;\n  }\n\n</style>","// transfix.js from https://github.com/sveltejs/svelte/issues/4735\nexport default function fix(transtion: any) {\n    return function(node, params){\n      if (!node.hasOwnProperty('ownerDocument')) {\n        Object.defineProperty(node, 'ownerDocument', { get: function() { return node.parentElement; } });\n        let elem = node\n        while(elem.parentElement){ elem = elem.parentElement }\n        node.parentElement.head = elem\n      }\n      return transtion(node, params)\n    }\n  }","import el from './call-out.svelte';\n\nif (!customElements.get(\"call-out\")) {\n    customElements.define(\"call-out\", el as any as CustomElementConstructor);\n} else {\n    console.warn(\"Skipping re-defining customElement call-out\")\n}\n"]},"metadata":{},"sourceType":"script"}