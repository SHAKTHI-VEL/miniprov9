{"ast":null,"code":"var _jsxFileName = \"/home/shakthivel/Documents/mini-project/src/context/context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from 'react';\nimport contextReducer from './contextReducer';\nconst initialState = [];\nexport const ExpenseTrackerContext = /*#__PURE__*/createContext(initialState);\nexport const Provider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, dispatch] = useReducer(contextReducer, initialState); //Action Creators\n\n  const getTransaction = async () => {\n    const response = await fetch(`http://localhost:5000/api/v1/transactions`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    dispatch({\n      type: 'GET_TRANSACTIONS',\n      payload: json\n    });\n  };\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }; // const addTransaction=async (transactions)=>{\n  //     const response = await fetch(`http://localhost:5000/api/v1/transactions`, {\n  //       method: 'POST', \n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         \"auth-token\":localStorage.getItem('token')\n  //       },\n  //       body: JSON.stringify(transactions) \n  //    });\n  //    const transaction=await response.json(); \n  //    dispatch({\n  //     type: 'ADD_TRANSACTION',\n  //     payload:transaction\n  //   });\n  //   }\n\n\n  const balance = transactions.reduce((acc, currVal) => currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount, 0);\n  console.log(transactions);\n  return /*#__PURE__*/React.createElement(ExpenseTrackerContext.Provider, {\n    value: {\n      getTransaction,\n      deleteTransaction,\n      // addTransaction,\n      transactions,\n      balance\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(Provider, \"8TJZUJAVUm7sUKvBtFHeqz9kckA=\");\n\n_c = Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useReducer","createContext","contextReducer","initialState","ExpenseTrackerContext","Provider","children","transactions","dispatch","getTransaction","response","fetch","method","headers","localStorage","getItem","json","type","payload","deleteTransaction","id","balance","reduce","acc","currVal","amount","console","log"],"sources":["/home/shakthivel/Documents/mini-project/src/context/context.js"],"sourcesContent":["import React, { useReducer, createContext} from 'react';\nimport contextReducer from './contextReducer';\n\n\nconst initialState =[];\n\nexport const ExpenseTrackerContext = createContext(initialState);\n\nexport const Provider = ({ children }) => {\n\n    const [transactions, dispatch] = useReducer(contextReducer, initialState);\n\n    //Action Creators\n\n    const getTransaction=async ()=>{\n        const response = await fetch(`http://localhost:5000/api/v1/transactions`, {\n          method: 'GET', \n          \n          headers: {\n            'Content-Type': 'application/json',\n            \"auth-token\":localStorage.getItem('token')\n          },\n        \n    \n       });\n       const json=await response.json(); \n        \n         dispatch({\n            type: 'GET_TRANSACTIONS',\n            payload: json\n          });\n      }\n\n    const deleteTransaction = (id) => {\n        dispatch({ type: 'DELETE_TRANSACTION', payload: id })\n    }\n\n   \n    // const addTransaction=async (transactions)=>{\n    //     const response = await fetch(`http://localhost:5000/api/v1/transactions`, {\n    //       method: 'POST', \n          \n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //         \"auth-token\":localStorage.getItem('token')\n    //       },\n        \n    //       body: JSON.stringify(transactions) \n    //    });\n    //    const transaction=await response.json(); \n        \n    //    dispatch({\n    //     type: 'ADD_TRANSACTION',\n    //     payload:transaction\n    //   });\n    //   }\n\n    const balance = transactions.reduce((acc, currVal) => (currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount), 0);\n\n    console.log(transactions);\n\n    return (\n        <ExpenseTrackerContext.Provider value={{\n            getTransaction,\n            deleteTransaction,\n            // addTransaction,\n            transactions,\n            balance\n        }}>\n            {children}\n        </ExpenseTrackerContext.Provider>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAgD,OAAhD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAGA,MAAMC,YAAY,GAAE,EAApB;AAEA,OAAO,MAAMC,qBAAqB,gBAAGH,aAAa,CAACE,YAAD,CAA3C;AAEP,OAAO,MAAME,QAAQ,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAEtC,MAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BR,UAAU,CAACE,cAAD,EAAiBC,YAAjB,CAA3C,CAFsC,CAItC;;EAEA,MAAMM,cAAc,GAAC,YAAU;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAAF,EAA8C;MACxEC,MAAM,EAAE,KADgE;MAGxEC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,cAAaC,YAAY,CAACC,OAAb,CAAqB,OAArB;MAFN;IAH+D,CAA9C,CAA5B;IAUD,MAAMC,IAAI,GAAC,MAAMN,QAAQ,CAACM,IAAT,EAAjB;IAEER,QAAQ,CAAC;MACNS,IAAI,EAAE,kBADA;MAENC,OAAO,EAAEF;IAFH,CAAD,CAAR;EAIF,CAjBH;;EAmBA,MAAMG,iBAAiB,GAAIC,EAAD,IAAQ;IAC9BZ,QAAQ,CAAC;MAAES,IAAI,EAAE,oBAAR;MAA8BC,OAAO,EAAEE;IAAvC,CAAD,CAAR;EACH,CAFD,CAzBsC,CA8BtC;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EAEA,MAAMC,OAAO,GAAGd,YAAY,CAACe,MAAb,CAAoB,CAACC,GAAD,EAAMC,OAAN,KAAmBA,OAAO,CAACP,IAAR,KAAiB,SAAjB,GAA6BM,GAAG,GAAGC,OAAO,CAACC,MAA3C,GAAoDF,GAAG,GAAGC,OAAO,CAACC,MAAzG,EAAkH,CAAlH,CAAhB;EAEAC,OAAO,CAACC,GAAR,CAAYpB,YAAZ;EAEA,oBACI,oBAAC,qBAAD,CAAuB,QAAvB;IAAgC,KAAK,EAAE;MACnCE,cADmC;MAEnCU,iBAFmC;MAGnC;MACAZ,YAJmC;MAKnCc;IALmC,CAAvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAOKf,QAPL,CADJ;AAWH,CAhEM;;GAAMD,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}