{"ast":null,"code":"import _objectSpread from\"/home/shakthivel/Documents/mini-project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/shakthivel/Documents/mini-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useEffect}from'react';import{TextField,Typography,Grid,Button,FormControl,InputLabel,Select,MenuItem}from'@material-ui/core';import{ExpenseTrackerContext}from'../../../context/context';import{v4 as uuidv4}from'uuid';import useStyles from'./styles';import{useContext}from'react';import{useSpeechContext}from'@speechly/react-client';import formatDate from'../../../utils/formatDate';import{incomeCategories,expenseCategories}from'../../../constants/categories';import CustomizedSnackbar from'../../Snackbar/Snackbar';var initialState={amount:'',category:'',type:'Income',date:formatDate(new Date())};var Form=function Form(){var classes=useStyles();var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useContext=useContext(ExpenseTrackerContext),addTransaction=_useContext.addTransaction;var _useSpeechContext=useSpeechContext(),segment=_useSpeechContext.segment;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var createTransaction=function createTransaction(){if(Number.isNaN(Number(formData.amount))||!formData.date.includes('-'))return;var transaction=_objectSpread(_objectSpread({},formData),{},{amount:Number(formData.amount),id:uuidv4()});setOpen(true);addTransaction(transaction);setFormData(initialState);};useEffect(function(){if(segment){if(segment.intent.intent==='add_expense'){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Expense'}));}else if(segment.intent.intent==='add_income'){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Income'}));}else if(segment.isFinal&&segment.intent.intent==='create_transaction'){return createTransaction();}else if(segment.isFinal&&segment.intent.intent==='cancel_transaction'){return setFormData(initialState);}segment.entities.forEach(function(s){var category=\"\".concat(s.value.charAt(0)).concat(s.value.slice(1).toLowerCase());switch(s.type){case'amount':setFormData(_objectSpread(_objectSpread({},formData),{},{amount:s.value}));break;case'category':if(incomeCategories.map(function(iC){return iC.type;}).includes(category)){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Income',category:category}));}else if(expenseCategories.map(function(iC){return iC.type;}).includes(category)){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Expense',category:category}));}break;case'date':setFormData(_objectSpread(_objectSpread({},formData),{},{date:s.value}));break;default:break;}});if(segment.isFinal&&formData.amount&&formData.category&&formData.type&&formData.date){createTransaction();}}},[segment]);var selectedCategories=formData.type==='Income'?incomeCategories:expenseCategories;return/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(CustomizedSnackbar,{open:open,setOpen:setOpen}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Typography,{align:\"center\",variant:\"subtitle2\",gutterBottom:true},segment&&segment.words.map(function(w){return w.value;}).join(\" \"))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Type\"),/*#__PURE__*/React.createElement(Select,{value:formData.type,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{type:e.target.value}));}},/*#__PURE__*/React.createElement(MenuItem,{value:\"Income\"},\"Income\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Expense\"},\"Expense\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Category\"),/*#__PURE__*/React.createElement(Select,{value:formData.category,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{category:e.target.value}));}},selectedCategories.map(function(c){return/*#__PURE__*/React.createElement(MenuItem,{key:c.type,value:c.type},c.type);})))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(TextField,{type:\"number\",label:\"Amount\",value:formData.amount,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{amount:e.target.value}));},fullWidth:true})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(TextField,{type:\"date\",label:\"Date\",value:formData.date,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{date:formatDate(e.target.value)}));},fullWidth:true})),/*#__PURE__*/React.createElement(Button,{className:classes.button,variant:\"outlined\",color:\"primary\",fullWidth:true,onClick:createTransaction},\"Create\"));};export default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Typography","Grid","Button","FormControl","InputLabel","Select","MenuItem","ExpenseTrackerContext","v4","uuidv4","useStyles","useContext","useSpeechContext","formatDate","incomeCategories","expenseCategories","CustomizedSnackbar","initialState","amount","category","type","date","Date","Form","classes","formData","setFormData","addTransaction","segment","open","setOpen","createTransaction","Number","isNaN","includes","transaction","id","intent","isFinal","entities","forEach","s","value","charAt","slice","toLowerCase","map","iC","selectedCategories","words","w","join","e","target","c","button"],"sources":["/home/shakthivel/Documents/mini-project/src/components/Main/Form/Form.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport useStyles from './styles';\nimport { useContext } from 'react';\nimport { useSpeechContext } from '@speechly/react-client';\nimport formatDate from '../../../utils/formatDate';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport CustomizedSnackbar from '../../Snackbar/Snackbar'\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date())\n}\n\nconst Form = () => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState(initialState);\n    const { addTransaction } = useContext(ExpenseTrackerContext);\n    const { segment } = useSpeechContext();\n    const [open, setOpen] = useState(false);\n\n    const createTransaction = () => {\n        if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n        \n        \n        const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() }\n        \n        setOpen(true);\n        addTransaction(transaction);\n        setFormData(initialState);\n    }\n\n\n    useEffect(() => {\n        if (segment) {\n          if (segment.intent.intent === 'add_expense') {\n            setFormData({ ...formData, type: 'Expense' });\n          } else if (segment.intent.intent === 'add_income') {\n            setFormData({ ...formData, type: 'Income' });\n          } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\n            return createTransaction();\n          } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n            return setFormData(initialState);\n          }\n    \n          segment.entities.forEach((s) => {\n            const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\n    \n            switch (s.type) {\n              case 'amount':\n                setFormData({ ...formData, amount: s.value });\n                break;\n              case 'category':\n                if (incomeCategories.map((iC) => iC.type).includes(category)) {\n                  setFormData({ ...formData, type: 'Income', category });\n                } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\n                  setFormData({ ...formData, type: 'Expense', category });\n                }\n                break;\n              case 'date':\n                setFormData({ ...formData, date: s.value });\n                break;\n              default:\n                break;\n            }\n          });\n    \n          if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n            createTransaction();\n          }\n        }\n      }, [segment]);\n\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n    return (\n        <Grid container spacing={2}>\n          <CustomizedSnackbar open={open} setOpen={setOpen}/>\n            <Grid item xs={12}>\n                <Typography align='center' variant='subtitle2' gutterBottom>\n                    {segment && segment.words.map((w) => w.value).join(\" \")}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Type</InputLabel>\n                    <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\n                        <MenuItem value=\"Income\">Income</MenuItem>\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Category</InputLabel>\n                    <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\n                        {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n                <TextField type='number' label='Amount' value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\n            </Grid>\n\n            <Grid item xs={6}>\n                <TextField type='date' label='Date' value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} fullWidth />\n            </Grid>\n            <Button className={classes.button} variant=\"outlined\" color='primary' fullWidth onClick={createTransaction}>Create</Button>\n        </Grid>\n    )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module"}