[{"/home/shakthivel/Documents/mini-project/src/index.js":"1","/home/shakthivel/Documents/mini-project/src/App.js":"2","/home/shakthivel/Documents/mini-project/src/context/context.js":"3","/home/shakthivel/Documents/mini-project/src/styles.js":"4","/home/shakthivel/Documents/mini-project/src/context/contextReducer.js":"5","/home/shakthivel/Documents/mini-project/src/components/Details/Details.jsx":"6","/home/shakthivel/Documents/mini-project/src/components/Main/Main.jsx":"7","/home/shakthivel/Documents/mini-project/src/useTransactions.js":"8","/home/shakthivel/Documents/mini-project/src/components/InfoCard.jsx":"9","/home/shakthivel/Documents/mini-project/src/components/Details/styles.js":"10","/home/shakthivel/Documents/mini-project/src/components/Main/styles.js":"11","/home/shakthivel/Documents/mini-project/src/components/Main/List/List.jsx":"12","/home/shakthivel/Documents/mini-project/src/components/Main/Form/Form.jsx":"13","/home/shakthivel/Documents/mini-project/src/components/Main/List/styles.js":"14","/home/shakthivel/Documents/mini-project/src/constants/categories.js":"15","/home/shakthivel/Documents/mini-project/src/utils/formatDate.js":"16","/home/shakthivel/Documents/mini-project/src/components/Snackbar/Snackbar.jsx":"17","/home/shakthivel/Documents/mini-project/src/components/Main/Form/styles.js":"18","/home/shakthivel/Documents/mini-project/src/components/Snackbar/styles.js":"19","/home/shakthivel/Documents/mini-project/src/Master.js":"20","/home/shakthivel/Documents/mini-project/src/components/Authorize/Register.js":"21","/home/shakthivel/Documents/mini-project/src/components/Authorize/Login.js":"22","/home/shakthivel/Documents/mini-project/src/components/test/Login.js":"23","/home/shakthivel/Documents/mini-project/src/components/test/Signup.js":"24"},{"size":434,"mtime":1664636177325,"results":"25","hashOfConfig":"26"},{"size":728,"mtime":1664696196191,"results":"27","hashOfConfig":"26"},{"size":2542,"mtime":1665671580624,"results":"28","hashOfConfig":"26"},{"size":555,"mtime":1664640216190,"results":"29","hashOfConfig":"26"},{"size":571,"mtime":1665671376837,"results":"30","hashOfConfig":"26"},{"size":783,"mtime":1664636177325,"results":"31","hashOfConfig":"26"},{"size":1364,"mtime":1665231524703,"results":"32","hashOfConfig":"26"},{"size":1242,"mtime":1664636177325,"results":"33","hashOfConfig":"26"},{"size":443,"mtime":1664636177325,"results":"34","hashOfConfig":"26"},{"size":251,"mtime":1664636177325,"results":"35","hashOfConfig":"26"},{"size":489,"mtime":1664636177325,"results":"36","hashOfConfig":"26"},{"size":1350,"mtime":1665671471119,"results":"37","hashOfConfig":"26"},{"size":4931,"mtime":1665246670593,"results":"38","hashOfConfig":"26"},{"size":398,"mtime":1665231539824,"results":"39","hashOfConfig":"26"},{"size":1659,"mtime":1664636177325,"results":"40","hashOfConfig":"26"},{"size":350,"mtime":1664697090394,"results":"41","hashOfConfig":"26"},{"size":767,"mtime":1664636177325,"results":"42","hashOfConfig":"26"},{"size":234,"mtime":1664636177325,"results":"43","hashOfConfig":"26"},{"size":195,"mtime":1664636177325,"results":"44","hashOfConfig":"26"},{"size":1871,"mtime":1665671146711,"results":"45","hashOfConfig":"26"},{"size":508,"mtime":1664645768475,"results":"46","hashOfConfig":"26"},{"size":421,"mtime":1664644593179,"results":"47","hashOfConfig":"26"},{"size":2125,"mtime":1665672366677,"results":"48","hashOfConfig":"26"},{"size":2408,"mtime":1665670964769,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1u29yxw",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shakthivel/Documents/mini-project/src/index.js",[],[],[],"/home/shakthivel/Documents/mini-project/src/App.js",["129"],[],"import React from 'react';\nimport {\n    BrowserRouter as Router,\n   Routes,\n    Route\n  } from \"react-router-dom\";\n  import context from './context/context'\n  import Master from './Master'\n  import Login from './components/test/Login'\n  import Signup from './components/test/Signup'\n\n// import { SpeechState, useSpeechContext } from \"@speechly/react-client\";\n\n\nconst App = () => {\n    \n\n\n  return (\n    <>\n\n        <Router>\n            <Routes>\n            <Route exact path=\"/dashboard\" element={<Master/>} />\n            <Route exact path=\"/login\" element={ <Login />} /> \n            <Route exact path=\"/signup\" element={ <Signup/>} />\n            </Routes>\n        </Router>\n      \n       \n    </>\n\n  )\n}\n\nexport default App","/home/shakthivel/Documents/mini-project/src/context/context.js",["130"],[],"import React, { useReducer, createContext } from 'react';\nimport contextReducer from './contextReducer';\nimport axios from 'axios';\n\n\nconst initialState = JSON.parse(sessionStorage.getItem('transactions')) || []\n\n\n\nexport const ExpenseTrackerContext = createContext(initialState);\n\nexport const Provider = ({ children }) => {\n    const [ transactions,dispatch] = useReducer(contextReducer, initialState);\n\n    //Action Creators\n    // async function deleteTransaction(id) {\n    //     const config = {\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //           'auth-token':localStorage.getItem('token')\n    //         }\n    //       }\n        \n    //       await axios.delete(`https://fintrackbackend-production-89dd.up.railway.app/api/v1/transactions/${id}`,config);\n    \n    //       dispatch({\n    //         type: 'DELETE_TRANSACTION',\n    //         payload:id\n    //       });\n      \n    //   }\n    \n\n\n    const deleteTransaction = (id) => {\n      dispatch({ type: 'DELETE_TRANSACTION', payload: id })\n  }\n      async function addTransaction(transaction) {\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n            'auth-token':localStorage.getItem('token')\n          }\n        }\n    const res = await axios.post('https://fintrackbackend-production-89dd.up.railway.app/api/v1/transactions', transaction, config);\n    \n          dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n          });\n        }\n\n\n        async function getTransactions() {\n            const config = {\n                headers: {\n                  'Content-Type': 'application/json',\n                  'auth-token':localStorage.getItem('token')\n                }\n              }\n          \n              const res = await axios.get('https://fintrackbackend-production-89dd.up.railway.app/api/v1/transactions',config);\n            \n              dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data\n              });\n            \n          }\n\n\n          \n\n    const balance = transactions.reduce((acc, currVal) => (currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount), 0);\n\n    console.log(transactions);\n\n  \n\n    return (\n        <ExpenseTrackerContext.Provider value={{\n            getTransactions,\n            deleteTransaction,\n            addTransaction,\n            transactions,\n            balance\n        }}>\n            {children}\n        </ExpenseTrackerContext.Provider>\n    )\n}","/home/shakthivel/Documents/mini-project/src/styles.js",[],[],"/home/shakthivel/Documents/mini-project/src/context/contextReducer.js",["131"],[],"\n//dummy data\nconst transactions=[\n    \n  {id:1},\n  {id:2}\n\n]\n\nconst contextReducer=(state,action)=>{\nlet transactions;\nswitch (action.type) {\ncase 'DELETE_TRANSACTION':\n   transactions=state.filter((t)=>t.id!==action.payload);\n\n   sessionStorage.setItem('transactions', JSON.stringify(transactions));\n   \n   return transactions;\n   \n   case 'ADD_TRANSACTION':\n       transactions=[action.payload,...state];\n       sessionStorage.setItem('transactions', JSON.stringify(transactions));\n      return transactions;\n\ndefault:\n return state;\n}\n}\n\nexport default contextReducer","/home/shakthivel/Documents/mini-project/src/components/Details/Details.jsx",[],[],"/home/shakthivel/Documents/mini-project/src/components/Main/Main.jsx",[],[],"/home/shakthivel/Documents/mini-project/src/useTransactions.js",[],[],"/home/shakthivel/Documents/mini-project/src/components/InfoCard.jsx",[],[],"/home/shakthivel/Documents/mini-project/src/components/Details/styles.js",[],[],"/home/shakthivel/Documents/mini-project/src/components/Main/styles.js",[],[],"/home/shakthivel/Documents/mini-project/src/components/Main/List/List.jsx",["132"],[],"import React,{useContext} from 'react'\nimport {List as MUIList,ListItem,ListItemAvatar,ListItemText,Avatar,ListItemSecondaryAction,IconButton,Slide} from '@material-ui/core';\nimport{Delete,MoneyOff} from '@material-ui/icons';\n\nimport{ExpenseTrackerContext} from '../../../context/context';\nimport useStyles from './styles';\n\nconst List = () => {\n    const classes=useStyles();\n    const {deleteTransaction,transactions}=useContext(ExpenseTrackerContext);\n   \n    \n\n  return (\n    <MUIList dense={false} className={classes.list}>\n      {transactions.map((transaction) => (\n        <slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction.id}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar className={transaction.type==='Income'?classes.avatarIncome:classes.avatarExpense}>\n                <MoneyOff/>\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={transaction.category} secondary={`₹${transaction.amount} - ${transaction.date}`} />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>deleteTransaction(transaction.id)}>\n                    <Delete/>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n        </slide>\n      ))}\n    </MUIList>\n  )\n}\n\nexport default List","/home/shakthivel/Documents/mini-project/src/components/Main/Form/Form.jsx",["133"],[],"import React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport useStyles from './styles';\nimport { useContext } from 'react';\nimport { useSpeechContext } from '@speechly/react-client';\nimport formatDate from '../../../utils/formatDate';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport CustomizedSnackbar from '../../Snackbar/Snackbar'\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date())\n}\n\nconst Form = () => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState(initialState);\n    const { addTransaction } = useContext(ExpenseTrackerContext);\n    const { segment } = useSpeechContext();\n    const [open, setOpen] = useState(false);\n\n    const createTransaction = () => {\n        if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n        \n        \n        const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() }\n        \n        setOpen(true);\n        addTransaction(transaction);\n        setFormData(initialState);\n    }\n\n\n    useEffect(() => {\n        if (segment) {\n          if (segment.intent.intent === 'add_expense') {\n            setFormData({ ...formData, type: 'Expense' });\n          } else if (segment.intent.intent === 'add_income') {\n            setFormData({ ...formData, type: 'Income' });\n          } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\n            return createTransaction();\n          } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n            return setFormData(initialState);\n          }\n    \n          segment.entities.forEach((s) => {\n            const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\n    \n            switch (s.type) {\n              case 'amount':\n                setFormData({ ...formData, amount: s.value });\n                break;\n              case 'category':\n                if (incomeCategories.map((iC) => iC.type).includes(category)) {\n                  setFormData({ ...formData, type: 'Income', category });\n                } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\n                  setFormData({ ...formData, type: 'Expense', category });\n                }\n                break;\n              case 'date':\n                setFormData({ ...formData, date: s.value });\n                break;\n              default:\n                break;\n            }\n          });\n    \n          if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n            createTransaction();\n          }\n        }\n      }, [segment]);\n\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n    return (\n        <Grid container spacing={2}>\n          <CustomizedSnackbar open={open} setOpen={setOpen}/>\n            <Grid item xs={12}>\n                <Typography align='center' variant='subtitle2' gutterBottom>\n                    {segment && segment.words.map((w) => w.value).join(\" \")}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Type</InputLabel>\n                    <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\n                        <MenuItem value=\"Income\">Income</MenuItem>\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Category</InputLabel>\n                    <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\n                        {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n                <TextField type='number' label='Amount' value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\n            </Grid>\n\n            <Grid item xs={6}>\n                <TextField type='date' label='Date' value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} fullWidth />\n            </Grid>\n            <Button className={classes.button} variant=\"outlined\" color='primary' fullWidth onClick={createTransaction}>Create</Button>\n        </Grid>\n    )\n}\n\nexport default Form","/home/shakthivel/Documents/mini-project/src/components/Main/List/styles.js",[],[],"/home/shakthivel/Documents/mini-project/src/constants/categories.js",[],[],"/home/shakthivel/Documents/mini-project/src/utils/formatDate.js",[],[],"/home/shakthivel/Documents/mini-project/src/components/Snackbar/Snackbar.jsx",[],[],"/home/shakthivel/Documents/mini-project/src/components/Main/Form/styles.js",[],[],"/home/shakthivel/Documents/mini-project/src/components/Snackbar/styles.js",[],[],"/home/shakthivel/Documents/mini-project/src/Master.js",["134","135"],[],"import  React from 'react';\nimport {useEffect,useContext} from 'react';\n\nimport {Grid} from '@material-ui/core';\nimport{ExpenseTrackerContext} from './context/context';\nimport Main from './components/Main/Main'\nimport Details from './components/Details/Details'\nimport useStyles from './styles';\nimport './master.css'\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui';\nimport { useNavigate } from 'react-router-dom'\n// import { SpeechState, useSpeechContext } from \"@speechly/react-client\";\n\n\nconst Master= () => {\n\n    const classes = useStyles();\n    const context = useContext(ExpenseTrackerContext);\n    let navigate = useNavigate();\n    let {getTransactions,transactions}=context;\n    useEffect(() => {\n        if(localStorage.getItem('token')){\n            \n      getTransactions();\n      sessionStorage.setItem('transactions', JSON.stringify(transactions));\n        \n        }\n        else{\n          navigate(\"/login\")\n        }\n         \n         // eslint-disable-next-line\n        \n       }, [])\n  return (\n    <div>\n        <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justifyContent='center' style={{height: '100vh'}}>\n            <Grid item xs={12} sm={4} className={classes.mobile}>\n                <Details title=\"Income\"/>\n            </Grid>\n\n            <Grid item xs={12} sm={3} className={classes.main}>\n                <Main/>\n            </Grid>\n\n            <Grid item xs={12} sm={4} className={classes.desktop}>\n                <Details title=\"Income\"/>\n            </Grid>\n\n            <Grid item xs={12} sm={4} className={classes.last}>\n                <Details title=\"Expense\"/>\n            </Grid>\n\n        </Grid>\n        <PushToTalkButtonContainer>\n            <PushToTalkButton/>\n           \n        </PushToTalkButtonContainer>\n    </div>\n  )\n}\n\nexport default Master","/home/shakthivel/Documents/mini-project/src/components/Authorize/Register.js",[],[],"/home/shakthivel/Documents/mini-project/src/components/Authorize/Login.js",[],[],"/home/shakthivel/Documents/mini-project/src/components/test/Login.js",[],[],"/home/shakthivel/Documents/mini-project/src/components/test/Signup.js",[],[],{"ruleId":"136","severity":1,"message":"137","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":17},{"ruleId":"136","severity":1,"message":"140","line":45,"column":11,"nodeType":"138","messageId":"139","endLine":45,"endColumn":14},{"ruleId":"136","severity":1,"message":"141","line":3,"column":7,"nodeType":"138","messageId":"139","endLine":3,"endColumn":19},{"ruleId":"136","severity":1,"message":"142","line":2,"column":104,"nodeType":"138","messageId":"139","endLine":2,"endColumn":109},{"ruleId":"143","severity":1,"message":"144","line":77,"column":10,"nodeType":"145","endLine":77,"endColumn":19,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"147","line":10,"column":55,"nodeType":"138","messageId":"139","endLine":10,"endColumn":65},{"ruleId":"143","severity":1,"message":"148","line":34,"column":11,"nodeType":"145","endLine":34,"endColumn":13,"suggestions":"149"},"no-unused-vars","'context' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'transactions' is assigned a value but never used.","'Slide' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["150"],"'ErrorPanel' is defined but never used.","React Hook useEffect has missing dependencies: 'getTransactions', 'navigate', and 'transactions'. Either include them or remove the dependency array.",["151"],{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"156","text":"157"},"Update the dependencies array to be: [getTransactions, navigate, transactions]",{"range":"158","text":"159"},[2945,2954],"[createTransaction, formData, segment]",[1046,1048],"[getTransactions, navigate, transactions]"]